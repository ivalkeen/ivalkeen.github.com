<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on Ivan Tkalin</title>
    <link>https://www.tkalin.com/tags/vim/</link>
    <description>Recent content in Vim on Ivan Tkalin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>itkalin@gmail.com (Ivan Tkalin)</managingEditor>
    <webMaster>itkalin@gmail.com (Ivan Tkalin)</webMaster>
    <copyright>Â© Ivan Tkalin</copyright>
    <lastBuildDate>Sun, 10 May 2015 17:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.tkalin.com/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IDE-like &#34;Go to Declaration&#34; in Vim</title>
      <link>https://www.tkalin.com/blog_posts/ide-like-go-to-declaration-in-vim/</link>
      <pubDate>Sun, 10 May 2015 17:00:00 +0000</pubDate>
      <author>itkalin@gmail.com (Ivan Tkalin)</author>
      <guid>https://www.tkalin.com/blog_posts/ide-like-go-to-declaration-in-vim/</guid>
      <description>I always wanted &amp;lsquo;Go to declaration&amp;rsquo; feature in Vim with fuzzy-search, like in many modern IDEs. Of course, Vim has a built-in support of tags jumping, but for some programming languages, like Ruby (when you may have dozens of classes named Base), locating and picking the right declaration may be painful. I didn&amp;rsquo;t find any existing solutions, so I wrote a small plugin for that.
Here is a demo showing how this plugin works for Ruby file, but it&amp;rsquo;s not limited to Ruby.</description>
    </item>
    
    <item>
      <title>Using console vim as vim:// protocol handler in Ubuntu</title>
      <link>https://www.tkalin.com/blog_posts/using-console-vim-as-vim-protocol-handler-in-ubuntu/</link>
      <pubDate>Mon, 23 Apr 2012 11:00:00 +0000</pubDate>
      <author>itkalin@gmail.com (Ivan Tkalin)</author>
      <guid>https://www.tkalin.com/blog_posts/using-console-vim-as-vim-protocol-handler-in-ubuntu/</guid>
      <description>Do you want your browser to launch console vim and open specified file on specified line when you click link like this: vim:///etc/hosts&amp;amp;line=10? This article will show how to register console vim as vim:// protocol handler in Ubuntu 11.10. Just follow these steps:
1. Create vim launcher script We&amp;rsquo;ll need small vim launcher script, which will handle vim://... uri. As a ruby programmer I wrote this script in Ruby (so it requires Ruby to be installed), but it can be rewritten to Perl/Python or even Bash.</description>
    </item>
    
    <item>
      <title>Calling GNOME/KDE default application from NERDTree</title>
      <link>https://www.tkalin.com/blog_posts/calling-gnome-kde-default-application-from-nerdtree/</link>
      <pubDate>Fri, 03 Feb 2012 11:00:00 +0000</pubDate>
      <author>itkalin@gmail.com (Ivan Tkalin)</author>
      <guid>https://www.tkalin.com/blog_posts/calling-gnome-kde-default-application-from-nerdtree/</guid>
      <description>Sometimes it is really nice to be able to call system default application for file or directory from vim. For example open Document Reader for a pdf file or browse directory with images with Nautilus. I didn&amp;rsquo;t find working solution for NERDTree, which I use for file system navigation in vim, so I wrote simple plugin for it.
What it does, it simply creates new menu item e(x)ecute in NERDTree menu, which executes system default application for selected file or directory.</description>
    </item>
    
    <item>
      <title>Navigating your Rails project codebase  with vim</title>
      <link>https://www.tkalin.com/blog_posts/navigating-your-rails-project-codebase-with-vim/</link>
      <pubDate>Sat, 10 Dec 2011 11:00:00 +0000</pubDate>
      <author>itkalin@gmail.com (Ivan Tkalin)</author>
      <guid>https://www.tkalin.com/blog_posts/navigating-your-rails-project-codebase-with-vim/</guid>
      <description>When you work with source code, it is always nice to have the abilty to quickly jump to class/method definitions for either your own code or code from one of your ruby gems. This articles describes how to do this in vim with exuberant ctags, guard, and guard-ctags-bundler.
Tags  A tag is an identifier that appears in a &amp;ldquo;tags&amp;rdquo; file. It is a sort of label that can be jumped to.</description>
    </item>
    
  </channel>
</rss>